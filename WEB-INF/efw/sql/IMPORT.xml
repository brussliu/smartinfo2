<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqls>
<sqls>

	<sql id="update_14_r4" paramPrefix="!">
		update "RES_在庫保管手数料情報" RES 
		set 
			  "fnsku" = IPT."fnsku"
			, "商品名" = IPT."商品名"			 			
			, "Longest side" = to_number(IPT."Longest side", '9999999.99')
			, "Median side" = to_number(IPT."Median side", '9999999.99')
			, "Shortest side" = to_number(IPT."Shortest side", '9999999.99')
			, "Measurement units" = IPT."Measurement units" 
			, "weight" = IPT."weight"
			, "Weight units" = IPT."Weight units"
			, "Item volume" = IPT."Item volume"
			, "Volume units" = IPT."Volume units"
			, "Product size tier" = IPT."Product size tier"
			, "Average quantity on hand" = to_number(IPT."Average quantity on hand", '9999999.99')
			, "Average quantity pending removal" = to_number(IPT."Average quantity pending removal", '9999999.99')
			, "Total item volume (est.)" = IPT."Total item volume (est.)"			 
			, "Storage rate" = to_number(IPT."Storage rate", '9999999.99')
			, "通貨" = IPT."通貨"
			, "Monthly storage fee (est.)" = to_number(IPT."Monthly storage fee (est.)", '9999999.99')
			, "category" = IPT."category"
			, "Total Incentive Amount" = to_number(IPT."Total Incentive Amount", '9999999.99')
			, "breakdown_incentive_fee_amount" = IPT."breakdown_incentive_fee_amount"
			, "average_quantity_customer_orders" =	to_number(IPT."average_quantity_customer_orders", '9999999.99')		
			, "更新日時" = !nowTime
		from
			"IPT_在庫保管手数料情報" IPT 
		where
			IPT."ASIN" = RES."ASIN" 
			and IPT."Fulfillment center" = RES."Fulfillment center" 
			and IPT."Country code" = RES."Country code" 
			and IPT."Month of charge" = RES."Month of charge" 
			and IPT."店舗ID" = RES."店舗ID" 
			and IPT."店舗ID" = !shopId
	</sql>
	<sql id="insert_14_r4" paramPrefix="!">
		insert into "RES_在庫保管手数料情報" ( 
			  "ASIN" 
			, "fnsku" 
			, "商品名" 
			, "Fulfillment center" 
			, "Country code" 
			, "Longest side" 
			, "Median side" 
			, "Shortest side" 
			, "Measurement units" 
			, "weight" 
			, "Weight units" 
			, "Item volume" 
			, "Volume units" 
			, "Product size tier" 
			, "Average quantity on hand" 
			, "Average quantity pending removal" 
			, "Total item volume (est.)" 
			, "Month of charge" 
			, "Storage rate" 
			, "通貨" 
			, "Monthly storage fee (est.)" 
			, "category" 
			, "Total Incentive Amount" 
			, "breakdown_incentive_fee_amount" 
			, "average_quantity_customer_orders" 
			, "店舗ID"
			, "登録日時"
			, "更新日時"
		) 
		select
			  "ASIN"
			, "fnsku" 
			, "商品名"
			, "Fulfillment center" 
			, "Country code"
			, to_number(IPT."Longest side", '9999999.99')
			, to_number(IPT."Median side", '9999999.99')
			, to_number(IPT."Shortest side", '9999999.99')
			, "Measurement units"
			, "weight" 
			, "Weight units" 
			, "Item volume" 
			, "Volume units" 
			, "Product size tier" 
			, to_number(IPT."Average quantity on hand", '9999999.99')
			, to_number(IPT."Average quantity pending removal", '9999999.99')
			, "Total item volume (est.)" 
			, "Month of charge"
			, to_number(IPT."Storage rate", '9999999.99')
			, "通貨" 
			, to_number(IPT."Monthly storage fee (est.)", '9999999.99')
			, "category" 
			, to_number(IPT."Total Incentive Amount", '9999999.99')
			, "breakdown_incentive_fee_amount" 
			, to_number(IPT."average_quantity_customer_orders", '9999999.99')
			, "店舗ID"
			, !nowTime
			, !nowTime
		from
			"IPT_在庫保管手数料情報" IPT 
		where
			not exists ( 
				select
					1 
				from
					"RES_在庫保管手数料情報" RES 
				where
						IPT."ASIN" = RES."ASIN" 
					and IPT."Fulfillment center" = RES."Fulfillment center" 
					and IPT."Country code" = RES."Country code" 
					and IPT."Month of charge" = RES."Month of charge" 
					and IPT."店舗ID" = RES."店舗ID" 
			) 
			and IPT."店舗ID" = !shopId
	</sql>
	<sql id="update_15_r5" paramPrefix="!">
		update "RES_長期在庫保管手数料請求額情報" RES 
		set
			  "日付" = to_timestamp(IPT."日付", 'YYYY/MM/DD HH24:MI:SS    ')
			, "出品者SKU" = IPT."出品者SKU"
			, "FNSKU" = IPT."FNSKU"
			, "ASIN" = IPT."ASIN"
			, "商品名" = IPT."商品名"
			, "コンディション" = IPT."コンディション"			
			, "qty-charged-long-time-range-long-term-storage-fee" = to_number(IPT."qty-charged-long-time-range-long-term-storage-fee", '999999999')
			, "商品サイズ" = IPT."商品サイズ"
			, "通貨" = IPT."通貨"
			, "long-time-range-long-term-storage-fee" = to_number(IPT."long-time-range-long-term-storage-fee", '9999999.99')
			, "qty-charged-short-time-range-long-term-storage-fee" = to_number(IPT."qty-charged-short-time-range-long-term-storage-fee", '999999999')
			, "short-time-range-long-term-storage-fee" = to_number(IPT."short-time-range-long-term-storage-fee", '9999999.99')
			, "volume-unit" = IPT."volume-unit"
			, "国" = IPT."国"
			, "enrolled-in-small-and-light" = IPT."enrolled-in-small-and-light"
			, "更新日時" = !nowTime
		from
			"IPT_長期在庫保管手数料請求額情報" IPT 
		where
				to_timestamp(IPT."日付", 'YYYY/MM/DD HH24:MI:SS    ') = RES."日付" 
				and IPT."出品者SKU" = RES."出品者SKU" 
				and IPT."ASIN" = RES."ASIN" 
				and IPT."コンディション" = RES."コンディション" 
				and IPT."国" = RES."国" 
				and IPT."店舗ID" = RES."店舗ID" 
				and IPT."店舗ID" = !shopId 

	</sql>
	<sql id="insert_15_r5" paramPrefix="!">
		insert into "RES_長期在庫保管手数料請求額情報" ( 
			  "日付" 
			, "出品者SKU" 
			, "FNSKU" 
			, "ASIN" 
			, "商品名" 
			, "コンディション" 
			, "qty-charged-long-time-range-long-term-storage-fee" 
			, "商品サイズ" 
			, "通貨" 
			, "long-time-range-long-term-storage-fee" 
			, "qty-charged-short-time-range-long-term-storage-fee" 
			, "short-time-range-long-term-storage-fee" 
			, "volume-unit" 
			, "国" 
			, "enrolled-in-small-and-light" 
			, "店舗ID" 
			, "登録日時" 
			, "更新日時"
		) 
		select
			to_timestamp(IPT."日付", 'YYYY-MM-DD HH24:MI:SS+09:00') 
			, IPT."出品者SKU"
			, IPT."FNSKU"
			, IPT."ASIN"
			, IPT."商品名"
			, IPT."コンディション"			
			, to_number(IPT."qty-charged-long-time-range-long-term-storage-fee", '999999999.99')
			, IPT."商品サイズ"
			, IPT."通貨"
			, to_number(IPT."long-time-range-long-term-storage-fee", '999999999.99')
			, to_number(IPT."qty-charged-short-time-range-long-term-storage-fee", '999999999.99')
			, to_number(IPT."short-time-range-long-term-storage-fee", '999999999.99')
			, IPT."volume-unit"
			, IPT."国"
			, IPT."enrolled-in-small-and-light"
			, "店舗ID"
			, !nowTime
			, !nowTime
		from
			"IPT_長期在庫保管手数料請求額情報" IPT 
		where
			not exists ( 
				select
					1 
				from
					"RES_長期在庫保管手数料請求額情報" RES 
				where
						to_timestamp(IPT."日付", 'YYYY/MM/DD HH24:MI:SS    ') = RES."日付"  
					and IPT."出品者SKU" = RES."出品者SKU" 
					and IPT."ASIN" = RES."ASIN" 
					and IPT."コンディション" = RES."コンディション" 
					and IPT."国" = RES."国" 
					and IPT."店舗ID" = RES."店舗ID" 					
			) 
			and IPT."店舗ID" = !shopId 
			
	</sql>


	<sql id="excute_m1_m5">
		insert into "MST_手数料見積り額情報" (
			  "sku"
			, "asin"
			, "店舗ID"
			, "登録日時"
			, "更新日時"
		)
		select
			  "SKU番号"
			, "ASIN番号"
			, "店舗ID"
			, now()
			, now()
		from
			"MST_出品マスタ情報" MST1
		where
			not exists ( 
				select
					1 
				from
					"MST_販売数量情報" MST2
				where
					MST1."SKU番号" = MST2."SKU番号" 
					and MST1."ASIN番号" = MST2."ASIN番号" 
					and MST1."店舗ID" = MST2."店舗ID"
			) 
			and MST1."店舗ID" = :shopId
	</sql>

	<sql id="excute_13_m5">
		update "MST_手数料見積り額情報"
			set 
			, "fnsku"  = IPT."fnsku"
			, "商品名"  = IPT."商品名"
			, "商品グループ"  = IPT."商品グループ"
			, "ブランド" = IPT."ブランド"
			, "フルフィルメント" = IPT."フルフィルメント"
			, "一番長い辺" = to_number(IPT."一番長い辺",'99999.99')
			, "中間の辺" = to_number(IPT."中間の辺",'99999.99')
			, "一番短い辺" = to_number(IPT."一番短い辺",'99999.99')
			, "長さと周囲の寸法" = to_number(IPT."長さと周囲の寸法",'99999.99')
			, "商品の寸法" = IPT."商品の寸法"
			, "商品パッケージの重量" = to_number(IPT."商品パッケージの重量",'99999.99')
			, "商品重量" = IPT."商品重量"
			, "通貨" = IPT."通貨"
			, "手数料見積り額" = to_number(IPT."手数料見積り額",'99999.99')
			, "販売手数料見積り額(個数あたり)" = to_number(IPT."販売手数料見積り額(個数あたり)",'99999.99')
			, "カテゴリー別成約料見積り額" = to_number(IPT."カテゴリー別成約料見積り額",'99999.99')
			, "出荷作業手数料見積り額（個数あたり）" = IPT."出荷作業手数料見積り額（個数あたり）"
			, "発送重量手数料の見積り額（個数あたり）" = IPT."発送重量手数料の見積り額（個数あたり）"
			, "配送代行手数料見積り額（個数あたり）" = to_number(IPT."配送代行手数料見積り額（個数あたり）",'99999.99')
			, "今後の手数料見積り額（現在のAmazon出品サービ" = IPT."今後の手数料見積り額（現在のAmazon出品サービ"
			, "今後の出荷作業手数料の見積り額（個数あたり" = IPT."今後の出荷作業手数料の見積り額（個数あたり"
			, "今後の発送重量手数料見積り額（個数あたり）" = IPT."今後の発送重量手数料見積り額（個数あたり）"
			, "今後の配送代行手数料（個数あたり）" = IPT."今後の配送代行手数料（個数あたり）"
			, "更新日時" = now()
		from 
			"IPT_手数料見積り額情報" IPT
		where
			"MST_手数料見積り額情報"."sku" = IPT."sku"
			and
			"MST_手数料見積り額情報"."asin" = IPT."asin"
			and
			"MST_手数料見積り額情報"."店舗ID" = IPT."店舗ID"
			and
			"MST_手数料見積り額情報"."店舗ID" = :shopId

	</sql>



	<sql id="excute_r1_m3_01">
		update "MST_販売数量情報" 
		set
			"販売数量（直近３日間）" = LIST."数量"
		from
			(
			select
				MST."店舗ID",
				MST."SKU番号", 
				MST."ASIN番号", 
				COALESCE(RES."数量",0) as "数量"
			from
				"MST_販売数量情報" MST left join
				( 
					SELECT
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号", 
						sum(T."ORDER_数量") AS "数量" 
					FROM
						"RES_注文情報" T
					WHERE
						T."ORDER_注文ステータス" in ('Pending', 'Shipping', 'Shipped') 
						AND 
						T."ORDER_注文日時" >= now() + '-3 day' 
						AND 
						T."店舗ID" = :shopId
					GROUP BY
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号"
				) RES on 	MST."SKU番号" = RES."SKU番号" 
								and 
							MST."ASIN番号" = RES."ORDER_ASIN番号" 
								and 
							MST."店舗ID" = RES."店舗ID" 
			) LIST
		where
			"MST_販売数量情報"."SKU番号" = LIST."SKU番号" 
			and 
			"MST_販売数量情報"."ASIN番号" = LIST."ASIN番号" 
			and 
			"MST_販売数量情報"."店舗ID" = LIST."店舗ID" 
			and 
			"MST_販売数量情報"."店舗ID" = :shopId
	</sql>

	<sql id="excute_r1_m3_02">
		update "MST_販売数量情報" 
		set
			"販売数量（直近７日間）" = LIST."数量"
		from
			(
			select
				MST."店舗ID",
				MST."SKU番号", 
				MST."ASIN番号", 
				COALESCE(RES."数量",0) as "数量"
			from
				"MST_販売数量情報" MST left join
				( 
					SELECT
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号", 
						sum(T."ORDER_数量") AS "数量" 
					FROM
						"RES_注文情報" T
					WHERE
						T."ORDER_注文ステータス" in ('Pending', 'Shipping', 'Shipped') 
						AND 
						T."ORDER_注文日時" >= now() + '-7 day' 
						AND 
						T."店舗ID" = :shopId
					GROUP BY
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号"
				) RES on 	MST."SKU番号" = RES."SKU番号" 
								and 
							MST."ASIN番号" = RES."ORDER_ASIN番号" 
								and 
							MST."店舗ID" = RES."店舗ID" 
			) LIST
		where
			"MST_販売数量情報"."SKU番号" = LIST."SKU番号" 
			and 
			"MST_販売数量情報"."ASIN番号" = LIST."ASIN番号" 
			and 
			"MST_販売数量情報"."店舗ID" = LIST."店舗ID" 
			and 
			"MST_販売数量情報"."店舗ID" = :shopId
	</sql>
	<sql id="excute_r1_m3_03">
		update "MST_販売数量情報" 
		set
			"販売数量（直近３０日間）" = LIST."数量"
		from
			(
			select
				MST."店舗ID",
				MST."SKU番号", 
				MST."ASIN番号", 
				COALESCE(RES."数量",0) as "数量"
			from
				"MST_販売数量情報" MST left join
				( 
					SELECT
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号", 
						sum(T."ORDER_数量") AS "数量" 
					FROM
						"RES_注文情報" T
					WHERE
						T."ORDER_注文ステータス" in ('Pending', 'Shipping', 'Shipped') 
						AND 
						T."ORDER_注文日時" >= now() + '-30 day' 
						AND 
						T."店舗ID" = :shopId
					GROUP BY
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号"
				) RES on 	MST."SKU番号" = RES."SKU番号" 
								and 
							MST."ASIN番号" = RES."ORDER_ASIN番号" 
								and 
							MST."店舗ID" = RES."店舗ID" 
			) LIST
		where
			"MST_販売数量情報"."SKU番号" = LIST."SKU番号" 
			and 
			"MST_販売数量情報"."ASIN番号" = LIST."ASIN番号" 
			and 
			"MST_販売数量情報"."店舗ID" = LIST."店舗ID" 
			and 
			"MST_販売数量情報"."店舗ID" = :shopId
	</sql>
	<sql id="excute_r1_m3_04">
		update "MST_販売数量情報" 
		set
			"販売数量（直近６０日間）" = LIST."数量"
		from
			(
			select
				MST."店舗ID",
				MST."SKU番号", 
				MST."ASIN番号", 
				COALESCE(RES."数量",0) as "数量"
			from
				"MST_販売数量情報" MST left join
				( 
					SELECT
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号", 
						sum(T."ORDER_数量") AS "数量" 
					FROM
						"RES_注文情報" T
					WHERE
						T."ORDER_注文ステータス" in ('Pending', 'Shipping', 'Shipped') 
						AND 
						T."ORDER_注文日時" >= now() + '-60 day' 
						AND 
						T."店舗ID" = :shopId
					GROUP BY
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号"
				) RES on 	MST."SKU番号" = RES."SKU番号" 
								and 
							MST."ASIN番号" = RES."ORDER_ASIN番号" 
								and 
							MST."店舗ID" = RES."店舗ID" 
			) LIST
		where
			"MST_販売数量情報"."SKU番号" = LIST."SKU番号" 
			and 
			"MST_販売数量情報"."ASIN番号" = LIST."ASIN番号" 
			and 
			"MST_販売数量情報"."店舗ID" = LIST."店舗ID" 
			and 
			"MST_販売数量情報"."店舗ID" = :shopId
	</sql>
	<sql id="excute_r1_m3_05">
		update "MST_販売数量情報" 
		set
			"販売数量（直近９０日間）" = LIST."数量"
		from
			(
			select
				MST."店舗ID",
				MST."SKU番号", 
				MST."ASIN番号", 
				COALESCE(RES."数量",0) as "数量"
			from
				"MST_販売数量情報" MST left join
				( 
					SELECT
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号", 
						sum(T."ORDER_数量") AS "数量" 
					FROM
						"RES_注文情報" T
					WHERE
						T."ORDER_注文ステータス" in ('Pending', 'Shipping', 'Shipped') 
						AND 
						T."ORDER_注文日時" >= now() + '-90 day' 
						AND 
						T."店舗ID" = :shopId
					GROUP BY
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号"
				) RES on 	MST."SKU番号" = RES."SKU番号" 
								and 
							MST."ASIN番号" = RES."ORDER_ASIN番号" 
								and 
							MST."店舗ID" = RES."店舗ID" 
			) LIST
		where
			"MST_販売数量情報"."SKU番号" = LIST."SKU番号" 
			and 
			"MST_販売数量情報"."ASIN番号" = LIST."ASIN番号" 
			and 
			"MST_販売数量情報"."店舗ID" = LIST."店舗ID" 
			and 
			"MST_販売数量情報"."店舗ID" = :shopId
	</sql>
	<sql id="excute_r1_m3_06">
		update "MST_販売数量情報" 
		set
			"販売数量（直近１８０日間）" = LIST."数量"
		from
			(
			select
				MST."店舗ID",
				MST."SKU番号", 
				MST."ASIN番号", 
				COALESCE(RES."数量",0) as "数量"
			from
				"MST_販売数量情報" MST left join
				( 
					SELECT
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号", 
						sum(T."ORDER_数量") AS "数量" 
					FROM
						"RES_注文情報" T
					WHERE
						T."ORDER_注文ステータス" in ('Pending', 'Shipping', 'Shipped') 
						AND 
						T."ORDER_注文日時" >= now() + '-180 day' 
						AND 
						T."店舗ID" = :shopId
					GROUP BY
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号"
				) RES on 	MST."SKU番号" = RES."SKU番号" 
								and 
							MST."ASIN番号" = RES."ORDER_ASIN番号" 
								and 
							MST."店舗ID" = RES."店舗ID" 
			) LIST
		where
			"MST_販売数量情報"."SKU番号" = LIST."SKU番号" 
			and 
			"MST_販売数量情報"."ASIN番号" = LIST."ASIN番号" 
			and 
			"MST_販売数量情報"."店舗ID" = LIST."店舗ID" 
			and 
			"MST_販売数量情報"."店舗ID" = :shopId
	</sql>
	<sql id="excute_r1_m3_07">
		update "MST_販売数量情報" 
		set
			"販売数量（直近３６０日間）" = LIST."数量"
		from
			(
			select
				MST."店舗ID",
				MST."SKU番号", 
				MST."ASIN番号", 
				COALESCE(RES."数量",0) as "数量"
			from
				"MST_販売数量情報" MST left join
				( 
					SELECT
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号", 
						sum(T."ORDER_数量") AS "数量" 
					FROM
						"RES_注文情報" T
					WHERE
						T."ORDER_注文ステータス" in ('Pending', 'Shipping', 'Shipped') 
						AND 
						T."ORDER_注文日時" >= now() + '-360 day' 
						AND 
						T."店舗ID" = :shopId
					GROUP BY
						T."店舗ID",
						T."SKU番号", 
						T."ORDER_ASIN番号"
				) RES on 	MST."SKU番号" = RES."SKU番号" 
								and 
							MST."ASIN番号" = RES."ORDER_ASIN番号" 
								and 
							MST."店舗ID" = RES."店舗ID" 
			) LIST
		where
			"MST_販売数量情報"."SKU番号" = LIST."SKU番号" 
			and 
			"MST_販売数量情報"."ASIN番号" = LIST."ASIN番号" 
			and 
			"MST_販売数量情報"."店舗ID" = LIST."店舗ID" 
			and 
			"MST_販売数量情報"."店舗ID" = :shopId
	</sql>

	<sql id="excute_m1_m3">
		insert into "MST_販売数量情報" (
			  "SKU番号"
			, "ASIN番号"
			, "店舗ID"
			, "登録日時"
			, "更新日時"
		)
		select
			  "SKU番号"
			, "ASIN番号"
			, "店舗ID"
			, now()
			, now()
		from
			"MST_出品マスタ情報" MST1
		where
			not exists ( 
				select
					1 
				from
					"MST_販売数量情報" MST2
				where
					MST1."SKU番号" = MST2."SKU番号" 
					and MST1."ASIN番号" = MST2."ASIN番号" 
					and MST1."店舗ID" = MST2."店舗ID"
			) 
			and MST1."店舗ID" = :shopId
	</sql>

	<sql id="excute_03_m2">
		update "MST_在庫情報"
			set "FBA在庫" = TO_NUMBER(IPT."Quantity Available",'999999')
		from 
			"IPT_FBA在庫情報" IPT
		where
			"MST_在庫情報"."SKU番号" = IPT."seller-sku"
			and
			"MST_在庫情報"."ASIN番号" = IPT."asin"
			and
			"MST_在庫情報"."店舗ID" = IPT."店舗ID"
			and
			IPT."Warehouse-Condition-code" = 'SELLABLE'
			and
			"MST_在庫情報"."店舗ID" = :shopId
	</sql>


	<sql id="excute_02_m2">
		update "MST_在庫情報"
			set "FBM在庫" = TO_NUMBER(IPT."数量",'999999')
		from 
			"IPT_全出品情報" IPT
		where
			"MST_在庫情報"."SKU番号" = IPT."出品者SKU"
			and
			"MST_在庫情報"."ASIN番号" = IPT."ASIN 1"
			and
			"MST_在庫情報"."店舗ID" = IPT."店舗ID"
			and
			"MST_在庫情報"."店舗ID" = :shopId
	</sql>

	<sql id="excute_m1_m2">
		insert into "MST_在庫情報" (
			  "SKU番号"
			, "ASIN番号"
			, "店舗ID"
			, "登録日時"
			, "更新日時"
		)
		select
			  "SKU番号"
			, "ASIN番号"
			, "店舗ID"
			, now()
			, now()
		from
			"MST_出品マスタ情報" MST1
		where
			not exists ( 
				select
					1 
				from
					"MST_在庫情報" MST2
				where
					MST1."SKU番号" = MST2."SKU番号" 
					and MST1."ASIN番号" = MST2."ASIN番号" 
					and MST1."店舗ID" = MST2."店舗ID"
			) 
			and MST1."店舗ID" = :shopId
	</sql>
<!--
	<sql id="excute_01_m1_00">
		select max("BACKUP日時") as BACKUPDATETIME from "MST_出品マスタ情報_BACKUP" where "店舗ID" = :shopId
	</sql>
-->
	<sql id="excute_01_m1_01">
		insert into "MST_出品マスタ情報_BACKUP"
		select :nowTime, * from "MST_出品マスタ情報" where "店舗ID" = :shopId
	</sql>

	<sql id="excute_01_m1_02">
		delete from "MST_出品マスタ情報" where "店舗ID" = :shopId
	</sql>

	<sql id="excute_01_m1_03">
		insert into "MST_出品マスタ情報" (
			  "SKU番号"
			, "ASIN番号"
			, "商品管理番号"
			, "親子区分"
			, "商品種別"
			, "分類１"
			, "分類２"
			, "仕入価格"
			, "FBA発送方式"
			, "商品名称"
			, "店舗ID"
			, "登録日時"
			, "更新日時"
		)
		select
			"出品者SKU" as "SKU番号",
			"ASIN 1" as "ASIN番号",
			null as "商品管理番号",
			case when "ステータス" = 'Incomplete' then '親商品' else '子商品' end as "親子区分",
			null as "商品種別",
			null as "分類１",
			null as "分類２",
			null as "仕入価格",
			null as "FBA発送方式",
			"商品名" as "商品名称",
			"店舗ID" as "店舗ID",
			:nowTime,
			:nowTime
		from  
			"IPT_全出品情報"
		where
			"店舗ID" = :shopId
	</sql>

	<sql id="excute_01_m1_04">
		update "MST_出品マスタ情報"
		set 
			"LABEL番号" = case when BK."LABEL番号" is not null then BK."LABEL番号" else "MST_出品マスタ情報"."LABEL番号" end,
			"商品管理番号" = case when BK."商品管理番号" is not null then BK."商品管理番号" else "MST_出品マスタ情報"."商品管理番号" end,
			"商品種別" = case when BK."商品種別" is not null then BK."商品種別" else "MST_出品マスタ情報"."商品種別" end,
			"分類１" = case when BK."分類１" is not null then BK."分類１" else "MST_出品マスタ情報"."分類１" end,
			"分類２" = case when BK."分類２" is not null then BK."分類２" else "MST_出品マスタ情報"."分類２" end,
			"仕入価格" = case when BK."仕入価格" is not null then BK."仕入価格" else "MST_出品マスタ情報"."仕入価格" end,
			"FBA発送方式" = case when BK."FBA発送方式" is not null then BK."FBA発送方式" else "MST_出品マスタ情報"."FBA発送方式" end,
			"商品名称" = case when BK."商品名称" is not null then BK."商品名称" else "MST_出品マスタ情報"."商品名称" end,
			"更新日時" = :nowTime
		from "MST_出品マスタ情報_BACKUP" BK
		where
			"MST_出品マスタ情報"."SKU番号" = BK."SKU番号"
			and
			"MST_出品マスタ情報"."ASIN番号" = BK."ASIN番号"
			and
			"MST_出品マスタ情報"."店舗ID" = BK."店舗ID"
			and
			BK."店舗ID" = :shopId
			and
			BK."BACKUP日時" = (select max("BACKUP日時") as BACKUPDATETIME from "MST_出品マスタ情報_BACKUP" where "店舗ID" = :shopId)
	</sql>

	<sql id="excute_01_m1_05">
		update "MST_出品マスタ情報"
		set 
			"LABEL番号" = IPT."fulfillment-channel-sku",
			"更新日時" = :nowTime
		from "IPT_FBA在庫情報" IPT
		where
			"MST_出品マスタ情報"."SKU番号" = IPT."seller-sku"
			and
			"MST_出品マスタ情報"."ASIN番号" = IPT."asin"
			and
			"MST_出品マスタ情報"."店舗ID" = IPT."店舗ID"
			and
			IPT."店舗ID" = :shopId
	</sql>


	<sql id="update_15_r3" paramPrefix="!">
		update "RES_長期在庫保管手数料請求額情報" RES 
		set
			"ORDER_最終更新日時" = to_timestamp(IPT."last-updated-date", 'YYYY-MM-DD HH24:MI:SS+09:00') 
			, "ORDER_注文ステータス" = IPT."order-status"
			, "ORDER_出荷方式" = IPT."fulfillment-channel"
			, "ORDER_配送方式" = IPT."ship-service-level"
			, "ORDER_ASIN番号" = IPT."asin"
			, "ORDER_数量" = to_number(IPT."quantity", '999999999')
			, "ORDER_通貨" = IPT."currency"
			, "ORDER_価格" = to_number(IPT."item-price", '999999999.99')
			, "ORDER_税金" = to_number(IPT."item-tax", '999999999.99')
			, "ORDER_配送料" = to_number(IPT."shipping-price", '999999999.99')
			, "ORDER_配送料税金" = to_number(IPT."shipping-tax", '999999999.99')
			, "ORDER_包装料" = to_number(IPT."gift-wrap-price", '999999999.99')
			, "ORDER_包装料税金" = to_number(IPT."gift-wrap-tax", '999999999.99')
			, "ORDER_注文プロモーション用割引額" = to_number(IPT."item-promotion-discount", '999999999.99')
			, "ORDER_配送プロモーション用割引額" = to_number(IPT."ship-promotion-discount", '999999999.99')
			, "ORDER_配送住所-市区町村" = IPT."ship-city"
			, "ORDER_配送住所-都道府県" = IPT."ship-state"
			, "ORDER_配送住所-郵便番号" = IPT."ship-postal-code"
			, "ORDER_配送住所-国" = IPT."ship-country"
			, "ORDER_プロモーション内容" = IPT."promotion-ids"
			, "更新日時" = !nowTime 
		from
			"IPT_長期在庫保管手数料請求額情報" IPT 
		where
			IPT."amazon-order-id" = RES."Amazon注文番号" 
			and IPT."sku" = RES."SKU番号" 
			and IPT."店舗ID" = RES."店舗ID" 
			and IPT."店舗ID" = !shopId

	</sql>

	<sql id="update_14_r2" paramPrefix="!">
		update "RES_在庫保管手数料情報" RES 
		set
			"ORDER_最終更新日時" = to_timestamp(IPT."last-updated-date", 'YYYY-MM-DD HH24:MI:SS+09:00') 
			, "ORDER_注文ステータス" = IPT."order-status"
			, "ORDER_出荷方式" = IPT."fulfillment-channel"
			, "ORDER_配送方式" = IPT."ship-service-level"
			, "ORDER_ASIN番号" = IPT."asin"
			, "ORDER_数量" = to_number(IPT."quantity", '999999999')
			, "ORDER_通貨" = IPT."currency"
			, "ORDER_価格" = to_number(IPT."item-price", '999999999.99')
			, "ORDER_税金" = to_number(IPT."item-tax", '999999999.99')
			, "ORDER_配送料" = to_number(IPT."shipping-price", '999999999.99')
			, "ORDER_配送料税金" = to_number(IPT."shipping-tax", '999999999.99')
			, "ORDER_包装料" = to_number(IPT."gift-wrap-price", '999999999.99')
			, "ORDER_包装料税金" = to_number(IPT."gift-wrap-tax", '999999999.99')
			, "ORDER_注文プロモーション用割引額" = to_number(IPT."item-promotion-discount", '999999999.99')
			, "ORDER_配送プロモーション用割引額" = to_number(IPT."ship-promotion-discount", '999999999.99')
			, "ORDER_配送住所-市区町村" = IPT."ship-city"
			, "ORDER_配送住所-都道府県" = IPT."ship-state"
			, "ORDER_配送住所-郵便番号" = IPT."ship-postal-code"
			, "ORDER_配送住所-国" = IPT."ship-country"
			, "ORDER_プロモーション内容" = IPT."promotion-ids"
			, "更新日時" = !nowTime 
		from
			"IPT_在庫保管手数料情報" IPT 
		where
			IPT."amazon-order-id" = RES."Amazon注文番号" 
			and IPT."sku" = RES."SKU番号" 
			and IPT."店舗ID" = RES."店舗ID" 
			and IPT."店舗ID" = !shopId

	</sql>


	<sql id="update_02_r1" paramPrefix="!">
		update "RES_注文情報" RES 
		set
			  "ORDER_注文日時" = to_timestamp(IPT."purchase-date", 'YYYY-MM-DD HH24:MI:SS+09:00') 
			, "ORDER_最終更新日時" = to_timestamp(IPT."last-updated-date", 'YYYY-MM-DD HH24:MI:SS+09:00') 
			, "ORDER_注文ステータス" = IPT."order-status"
			, "ORDER_出荷方式" = IPT."fulfillment-channel"
			, "ORDER_配送方式" = IPT."ship-service-level"
			, "ORDER_ASIN番号" = IPT."asin"
			, "ORDER_数量" = to_number(IPT."quantity", '999999999')
			, "ORDER_通貨" = IPT."currency"
			, "ORDER_価格" = to_number(IPT."item-price", '999999999.99')
			, "ORDER_税金" = to_number(IPT."item-tax", '999999999.99')
			, "ORDER_配送料" = to_number(IPT."shipping-price", '999999999.99')
			, "ORDER_配送料税金" = to_number(IPT."shipping-tax", '999999999.99')
			, "ORDER_包装料" = to_number(IPT."gift-wrap-price", '999999999.99')
			, "ORDER_包装料税金" = to_number(IPT."gift-wrap-tax", '999999999.99')
			, "ORDER_注文プロモーション用割引額" = to_number(IPT."item-promotion-discount", '999999999.99')
			, "ORDER_配送プロモーション用割引額" = to_number(IPT."ship-promotion-discount", '999999999.99')
			, "ORDER_配送住所-市区町村" = IPT."ship-city"
			, "ORDER_配送住所-都道府県" = IPT."ship-state"
			, "ORDER_配送住所-郵便番号" = IPT."ship-postal-code"
			, "ORDER_配送住所-国" = IPT."ship-country"
			, "ORDER_プロモーション内容" = IPT."promotion-ids"
			, "更新日時" = !nowTime 
		from
			"IPT_全注文情報" IPT 
		where
			IPT."amazon-order-id" = RES."Amazon注文番号" 
			and IPT."sku" = RES."SKU番号" 
			and IPT."店舗ID" = RES."店舗ID" 
			and IPT."店舗ID" = !shopId

	</sql>

	<sql id="update_04_r2" paramPrefix="!">
		update "RES_注文ペイメント情報" RES 
		set
			"日付/時間" = to_timestamp(IPT."日付/時間", 'YYYY/MM/DD HH24:MI:SS    ')
			, "決済番号" = IPT."決済番号"
			, "トランザクションの種類" = IPT."トランザクションの種類"
			, "説明" = IPT."説明"
			, "数量" = to_number(IPT."数量", '999999999')
			, "Amazon 出品サービス" = IPT."Amazon 出品サービス"
			, "フルフィルメント" = IPT."フルフィルメント"
			, "市町村" = IPT."市町村"
			, "都道府県" = IPT."都道府県"
			, "郵便番号" = IPT."郵便番号"
			, "税金徴収型" = IPT."税金徴収型"
			, "商品売上" = to_number(IPT."商品売上", '999999999.99')
			, "商品の売上税" = to_number(IPT."商品の売上税", '999999999.99')
			, "配送料" = to_number(IPT."配送料", '999999999.99')
			, "配送料の税金" = to_number(IPT."配送料の税金", '999999999.99')
			, "ギフト包装手数料" = to_number(IPT."ギフト包装手数料", '999999999.99')
			, "ギフト包装クレジットの税金" = to_number(IPT."ギフト包装クレジットの税金", '999999999.99')
			, "Amazonポイントの費用" = to_number(IPT."Amazonポイントの費用", '999999999.99')
			, "プロモーション割引額" = to_number(IPT."プロモーション割引額", '999999999.99')
			, "プロモーション割引の税金" = to_number(IPT."プロモーション割引の税金", '999999999.99')
			, "源泉徴収税を伴うマーケットプレイス" = IPT."源泉徴収税を伴うマーケットプレイス"
			, "手数料" = to_number(IPT."手数料", '999999999.99')
			, "FBA 手数料" = to_number(IPT."FBA 手数料", '999999999.99')
			, "トランザクションに関するその他の手数" = to_number(IPT."トランザクションに関するその他の手数料", '999999999.99')
			, "その他" = to_number(IPT."その他", '999999999.99')
			, "合計" = to_number(IPT."合計", '999999999.99')
			, "更新日時" = !nowTime 
		from
			"IPT_ペイメント情報" IPT 
		where
			IPT."注文番号" = RES."注文番号" 
			and IPT."SKU" = RES."SKU" 
			and IPT."店舗ID" = RES."店舗ID" 
			and IPT."トランザクションの種類" in ('注文','返金')
			and IPT."店舗ID" = !shopId

	</sql>



	<sql id="update_11_r1" paramPrefix="!">
		update "RES_注文情報" RES 
		set
			"SHIP_注文受付日" = to_timestamp(IPT."注文受付日", 'YYYY-MM-DD HH24:MI:SS+09:00')
			, "SHIP_支払日" = to_timestamp(IPT."支払日", 'YYYY-MM-DD HH24:MI:SS+09:00')
			, "SHIP_発送日" = to_timestamp(IPT."発送日", 'YYYY-MM-DD HH24:MI:SS+09:00')
			, "SHIP_配送サービスレベル" = IPT."配送サービスレベル"
			, "SHIP_受取人" = IPT."受取人"
			, "SHIP_お届け先1" = IPT."お届け先1"
			, "SHIP_お届け先2" = IPT."お届け先2"
			, "SHIP_お届け先3" = IPT."お届け先3"
			, "SHIP_市区町村" = IPT."市区町村"
			, "SHIP_都道府県" = IPT."都道府県"
			, "SHIP_発送先郵便番号" = IPT."発送先郵便番号"
			, "SHIP_国" = IPT."国"
			, "SHIP_お届け先電話番号" = IPT."お届け先電話番号"
			, "SHIP_請求先の住所1" = IPT."請求先の住所1"
			, "SHIP_請求先の住所2" = IPT."請求先の住所2"
			, "SHIP_請求先の住所3" = IPT."請求先の住所3"
			, "SHIP_請求先の市区町村" = IPT."請求先の市区町村"
			, "SHIP_請求先の都道府県" = IPT."請求先の都道府県"
			, "SHIP_請求先の郵便番号" = IPT."請求先の郵便番号"
			, "SHIP_請求先の国" = IPT."請求先の国"
			, "SHIP_配送業者" = IPT."配送業者"
			, "SHIP_問い合わせ番号" = IPT."問い合わせ番号"
			, "SHIP_配送予定日" = to_timestamp(IPT."配送予定日", 'YYYY-MM-DD HH24:MI:SS+09:00')
			, "SHIP_FC" = IPT."FC"
			, "SHIP_出荷経路" = IPT."出荷経路"
			, "SHIP_販売経路" = IPT."販売経路"
			, "更新日時" = !nowTime  
		from
			"IPT_FBA在庫出荷情報" IPT 
		where
			IPT."Amazon注文番号" = RES."Amazon注文番号" 
			and IPT."出品者SKU" = RES."SKU番号" 
			and IPT."店舗ID" = RES."店舗ID" 
			and IPT."店舗ID" = !shopId

	</sql>
	<sql id="update_12_r1" paramPrefix="!">
		update "RES_注文情報" RES 
		set
			"SHIP_出荷日" = to_timestamp(IPT."出荷日", 'YYYY-MM-DD HH24:MI:SS+09:00')
			, "更新日時" = current_timestamp 
		from
			"IPT_出荷情報" IPT 
		where
			IPT."Amazon注文番号" = RES."Amazon注文番号" 
			and IPT."出品者SKU" = RES."SKU番号" 
			and IPT."店舗ID" = RES."店舗ID" 
			and IPT."店舗ID" = !shopId

	</sql>
	
	<sql id="insert_15_r3" paramPrefix="!">
		insert into "RES_長期在庫保管手数料請求額情報" ( 
			"Amazon注文番号"
			, "SKU番号"
			, "ORDER_最終更新日時"
			, "ORDER_注文ステータス"
			, "ORDER_出荷方式"
			, "ORDER_配送方式"
			, "ORDER_ASIN番号"
			, "ORDER_数量"
			, "ORDER_通貨"
			, "ORDER_価格"
			, "ORDER_税金"
			, "ORDER_配送料"
			, "ORDER_配送料税金"
			, "ORDER_包装料"
			, "ORDER_包装料税金"
			, "ORDER_注文プロモーション用割引額"
			, "ORDER_配送プロモーション用割引額"
			, "ORDER_配送住所-市区町村"
			, "ORDER_配送住所-都道府県"
			, "ORDER_配送住所-郵便番号"
			, "ORDER_配送住所-国"
			, "ORDER_プロモーション内容"
			, "店舗ID"
			, "登録日時"
			, "更新日時"
		) 
		select
			  "amazon-order-id"
			, "sku"
			, to_timestamp("last-updated-date",'YYYY-MM-DD HH24:MI:SS+09:00')
			, "order-status"
			, "fulfillment-channel"
			, "ship-service-level"
			, "asin"
			, to_number("quantity",'999999999')
			, "currency"
			, to_number("item-price",'999999999.99')
			, to_number("item-tax",'999999999.99')
			, to_number("shipping-price",'999999999.99')
			, to_number("shipping-tax",'999999999.99')
			, to_number("gift-wrap-price",'999999999.99')
			, to_number("gift-wrap-tax",'999999999.99')
			, to_number("item-promotion-discount",'999999999.99')
			, to_number("ship-promotion-discount",'999999999.99')
			, "ship-city"
			, "ship-state"
			, "ship-postal-code"
			, "ship-country"
			, "promotion-ids"
			, "店舗ID"
			, !nowTime
			, !nowTime
		from
			"IPT_長期在庫保管手数料請求額情報" IPT 
		where
			not exists ( 
				select
					1 
				from
					"RES_長期在庫保管手数料請求額情報" RES 
				where
					IPT."amazon-order-id" = RES."Amazon注文番号" 
					and IPT."sku" = RES."SKU番号" 
					and IPT."店舗ID" = RES."店舗ID"
			) 
			and IPT."店舗ID" = :shopId
	</sql>
	<sql id="insert_14_r2" paramPrefix="!">
		insert into "RES_在庫保管手数料情報" ( 
			"Amazon注文番号"
			, "SKU番号"
			, "ORDER_最終更新日時"
			, "ORDER_注文ステータス"
			, "ORDER_出荷方式"
			, "ORDER_配送方式"
			, "ORDER_ASIN番号"
			, "ORDER_数量"
			, "ORDER_通貨"
			, "ORDER_価格"
			, "ORDER_税金"
			, "ORDER_配送料"
			, "ORDER_配送料税金"
			, "ORDER_包装料"
			, "ORDER_包装料税金"
			, "ORDER_注文プロモーション用割引額"
			, "ORDER_配送プロモーション用割引額"
			, "ORDER_配送住所-市区町村"
			, "ORDER_配送住所-都道府県"
			, "ORDER_配送住所-郵便番号"
			, "ORDER_配送住所-国"
			, "ORDER_プロモーション内容"
			, "店舗ID"
			, "登録日時"
			, "更新日時"
		) 
		select
			  "amazon-order-id"
			, "sku"
			, to_timestamp("last-updated-date",'YYYY-MM-DD HH24:MI:SS+09:00')
			, "order-status"
			, "fulfillment-channel"
			, "ship-service-level"
			, "asin"
			, to_number("quantity",'999999999')
			, "currency"
			, to_number("item-price",'999999999.99')
			, to_number("item-tax",'999999999.99')
			, to_number("shipping-price",'999999999.99')
			, to_number("shipping-tax",'999999999.99')
			, to_number("gift-wrap-price",'999999999.99')
			, to_number("gift-wrap-tax",'999999999.99')
			, to_number("item-promotion-discount",'999999999.99')
			, to_number("ship-promotion-discount",'999999999.99')
			, "ship-city"
			, "ship-state"
			, "ship-postal-code"
			, "ship-country"
			, "promotion-ids"
			, "店舗ID"
			, !nowTime
			, !nowTime
		from
			"IPT_在庫保管手数料情報" IPT 
		where
			not exists ( 
				select
					1 
				from
					"RES_在庫保管手数料情報" RES 
				where
					IPT."amazon-order-id" = RES."Amazon注文番号" 
					and IPT."sku" = RES."SKU番号" 
					and IPT."店舗ID" = RES."店舗ID"
			) 
			and IPT."店舗ID" = !shopId
	</sql>
	<sql id="insert_02_r1" paramPrefix="!">
		insert into "RES_注文情報" ( 
			"Amazon注文番号"
			, "SKU番号"
			, "ORDER_注文日時"
			, "ORDER_最終更新日時"
			, "ORDER_注文ステータス"
			, "ORDER_出荷方式"
			, "ORDER_配送方式"
			, "ORDER_ASIN番号"
			, "ORDER_数量"
			, "ORDER_通貨"
			, "ORDER_価格"
			, "ORDER_税金"
			, "ORDER_配送料"
			, "ORDER_配送料税金"
			, "ORDER_包装料"
			, "ORDER_包装料税金"
			, "ORDER_注文プロモーション用割引額"
			, "ORDER_配送プロモーション用割引額"
			, "ORDER_配送住所-市区町村"
			, "ORDER_配送住所-都道府県"
			, "ORDER_配送住所-郵便番号"
			, "ORDER_配送住所-国"
			, "ORDER_プロモーション内容"
			, "店舗ID"
			, "登録日時"
			, "更新日時"
		) 
		select
			  "amazon-order-id"
			, "sku"
			, to_timestamp("purchase-date",'YYYY-MM-DD HH24:MI:SS+09:00')
			, to_timestamp("last-updated-date",'YYYY-MM-DD HH24:MI:SS+09:00')
			, "order-status"
			, "fulfillment-channel"
			, "ship-service-level"
			, "asin"
			, to_number("quantity",'999999999')
			, "currency"
			, to_number("item-price",'999999999.99')
			, to_number("item-tax",'999999999.99')
			, to_number("shipping-price",'999999999.99')
			, to_number("shipping-tax",'999999999.99')
			, to_number("gift-wrap-price",'999999999.99')
			, to_number("gift-wrap-tax",'999999999.99')
			, to_number("item-promotion-discount",'999999999.99')
			, to_number("ship-promotion-discount",'999999999.99')
			, "ship-city"
			, "ship-state"
			, "ship-postal-code"
			, "ship-country"
			, "promotion-ids"
			, "店舗ID"
			, !nowTime
			, !nowTime
		from
			"IPT_全注文情報" IPT 
		where
			not exists ( 
				select
					1 
				from
					"RES_注文情報" RES 
				where
					IPT."amazon-order-id" = RES."Amazon注文番号" 
					and IPT."sku" = RES."SKU番号" 
					and IPT."店舗ID" = RES."店舗ID"
			) 
			and IPT."店舗ID" = !shopId
	</sql>

	<sql id="insert_04_r2" paramPrefix="!">
		insert into "RES_注文ペイメント情報" ( 
			  "日付/時間"
			, "決済番号"
			, "トランザクションの種類"
			, "注文番号"
			, "SKU"
			, "説明"
			, "数量"
			, "Amazon 出品サービス"
			, "フルフィルメント"
			, "市町村"
			, "都道府県"
			, "郵便番号"
			, "税金徴収型"
			, "商品売上"
			, "商品の売上税"
			, "配送料"
			, "配送料の税金"
			, "ギフト包装手数料"
			, "ギフト包装クレジットの税金"
			, "Amazonポイントの費用"
			, "プロモーション割引額"
			, "プロモーション割引の税金"
			, "源泉徴収税を伴うマーケットプレイス"
			, "手数料"
			, "FBA 手数料"
			, "トランザクションに関するその他の手数"
			, "その他"
			, "合計"
			, "店舗ID"
			, "登録日時"
			, "更新日時"
		) 
		select
			  to_timestamp(IPT."日付/時間", 'YYYY/MM/DD HH24:MI:SS    ')
			, IPT."決済番号"
			, IPT."トランザクションの種類"
			, IPT."注文番号"
			, IPT."SKU"
			, IPT."説明"
			, to_number(IPT."数量", '999999999')
			, IPT."Amazon 出品サービス"
			, IPT."フルフィルメント"
			, IPT."市町村"
			, IPT."都道府県"
			, IPT."郵便番号"
			, IPT."税金徴収型"
			, to_number(IPT."商品売上", '999999999.99')
			, to_number(IPT."商品の売上税", '999999999.99')
			, to_number(IPT."配送料", '999999999.99')
			, to_number(IPT."配送料の税金", '999999999.99')
			, to_number(IPT."ギフト包装手数料", '999999999.99')
			, to_number(IPT."ギフト包装クレジットの税金", '999999999.99')
			, to_number(IPT."Amazonポイントの費用", '999999999.99')
			, to_number(IPT."プロモーション割引額", '999999999.99')
			, to_number(IPT."プロモーション割引の税金", '999999999.99')
			, IPT."源泉徴収税を伴うマーケットプレイス"
			, to_number(IPT."手数料", '999999999.99')
			, to_number(IPT."FBA 手数料", '999999999.99')
			, to_number(IPT."トランザクションに関するその他の手数料", '999999999.99')
			, to_number(IPT."その他", '999999999.99')
			, to_number(IPT."合計", '999999999.99')
			, IPT."店舗ID"
			, !nowTime
			, !nowTime
		from
			"IPT_ペイメント情報" IPT 
		where
			not exists ( 
				select
					1 
				from
					"RES_注文ペイメント情報" RES 
				where
					IPT."注文番号" = RES."注文番号" 
					and IPT."SKU" = RES."SKU" 
					and IPT."店舗ID" = RES."店舗ID"
			) 
			and IPT."トランザクションの種類" in ('注文','返金')
			and IPT."店舗ID" = !shopId

	</sql>


	<sql id="insert_04_r3" paramPrefix="!">
		insert into "RES_非注文ペイメント情報" ( 
			  "日付/時間"
			, "決済番号"
			, "トランザクションの種類"
			, "注文番号"
			, "SKU"
			, "説明"
			, "合計"
			, "店舗ID"
			, "登録日時"
			, "更新日時"
		) 
		select
			  to_timestamp(IPT."日付/時間", 'YYYY/MM/DD HH24:MI:SS    ')
			, IPT."決済番号"
			, IPT."トランザクションの種類"
			, IPT."注文番号"
			, IPT."SKU"
			, IPT."説明"
			, to_number(IPT."合計", '999999999.99')
			, IPT."店舗ID"
			, !nowTime
			, !nowTime
		from
			"IPT_ペイメント情報" IPT 
		where
			not exists ( 
				select
					1 
				from
					"RES_非注文ペイメント情報" RES 
				where
					to_timestamp(IPT."日付/時間", 'YYYY/MM/DD HH24:MI:SS    ') = RES."日付/時間" 
					and IPT."決済番号" = RES."決済番号" 
					and IPT."トランザクションの種類" = RES."トランザクションの種類"
					and COALESCE(IPT."注文番号",'') = COALESCE(RES."注文番号",'')
					and COALESCE(IPT."SKU",'') = COALESCE(RES."SKU",'')
					and COALESCE(IPT."説明",'') = COALESCE(RES."説明",'')
			) 
			and IPT."トランザクションの種類" not in ('注文','返金')
			and IPT."店舗ID" = !shopId

	</sql>



	<sql id="insert_11_r1" paramPrefix="!">
		insert into "RES_注文情報" ( 
			"Amazon注文番号"
			, "SKU番号"
			, "SHIP_注文受付日"
			, "SHIP_支払日"
			, "SHIP_発送日"
			, "SHIP_配送サービスレベル"
			, "SHIP_受取人"
			, "SHIP_お届け先1"
			, "SHIP_お届け先2"
			, "SHIP_お届け先3"
			, "SHIP_市区町村"
			, "SHIP_都道府県"
			, "SHIP_発送先郵便番号"
			, "SHIP_国"
			, "SHIP_お届け先電話番号"
			, "SHIP_請求先の住所1"
			, "SHIP_請求先の住所2"
			, "SHIP_請求先の住所3"
			, "SHIP_請求先の市区町村"
			, "SHIP_請求先の都道府県"
			, "SHIP_請求先の郵便番号"
			, "SHIP_請求先の国"
			, "SHIP_配送業者"
			, "SHIP_問い合わせ番号"
			, "SHIP_配送予定日"
			, "SHIP_FC"
			, "SHIP_出荷経路"
			, "SHIP_販売経路"
			, "店舗ID"
			, "登録日時"
			, "更新日時"
		) 
		select
			"Amazon注文番号"
			, "出品者SKU"
			, to_timestamp(IPT."注文受付日", 'YYYY-MM-DD HH24:MI:SS+09:00')
			, to_timestamp(IPT."支払日", 'YYYY-MM-DD HH24:MI:SS+09:00')
			, to_timestamp(IPT."発送日", 'YYYY-MM-DD HH24:MI:SS+09:00')
			, IPT."配送サービスレベル"
			, IPT."受取人"
			, IPT."お届け先1"
			, IPT."お届け先2"
			, IPT."お届け先3"
			, IPT."市区町村"
			, IPT."都道府県"
			, IPT."発送先郵便番号"
			, IPT."国"
			, IPT."お届け先電話番号"
			, IPT."請求先の住所1"
			, IPT."請求先の住所2"
			, IPT."請求先の住所3"
			, IPT."請求先の市区町村"
			, IPT."請求先の都道府県"
			, IPT."請求先の郵便番号"
			, IPT."請求先の国"
			, IPT."配送業者"
			, IPT."問い合わせ番号"
			, to_timestamp(IPT."配送予定日", 'YYYY-MM-DD HH24:MI:SS+09:00')
			, IPT."FC"
			, IPT."出荷経路"
			, IPT."販売経路"
			, IPT."店舗ID"
			, !nowTime
			, !nowTime
		from
			"IPT_FBA在庫出荷情報" IPT 
		where
			not exists ( 
				select
					1 
				from
					"RES_注文情報" RES 
				where
					IPT."Amazon注文番号" = RES."Amazon注文番号" 
					and IPT."出品者SKU" = RES."SKU番号" 
					and IPT."店舗ID" = RES."店舗ID"
			) 
			and IPT."店舗ID" = !shopId

	</sql>
	<sql id="insert_12_r1" paramPrefix="!">
		insert 
		into "RES_注文情報" ( 
			"Amazon注文番号"
			, "SKU番号"
			, "SHIP_出荷日"
			, "店舗ID"
			, "登録日時"
			, "更新日時"
		) 
		select
			"Amazon注文番号"
			, "出品者SKU"
			, to_timestamp(IPT."出荷日", 'YYYY-MM-DD HH24:MI:SS+09:00')
			, IPT."店舗ID"
			, !nowTime
			, !nowTime 
		from
			"IPT_出荷情報" IPT 
		where
			not exists ( 
				select
					1 
				from
					"RES_注文情報" RES 
				where
					IPT."Amazon注文番号" = RES."Amazon注文番号" 
					and IPT."出品者SKU" = RES."SKU番号" 
					and IPT."店舗ID" = RES."店舗ID"
			) 
			and IPT."店舗ID" = !shopId

	</sql>

	<sql id="deleteFile_02_h1">
			delete 
			from
				"HIS_注文情報" 
			where
				exists ( 
					select
						1 
					from
						"IPT_全注文情報" 
					where
							"IPT_全注文情報"."amazon-order-id" = "HIS_注文情報"."amazon-order-id" 
						and "IPT_全注文情報"."sku" = "HIS_注文情報"."sku" 
						and "IPT_全注文情報"."asin" = "HIS_注文情報"."asin"
						and "IPT_全注文情報"."店舗ID" = "HIS_注文情報"."店舗ID"
						and "IPT_全注文情報"."店舗ID" = :shopId
				)
	</sql>
	<sql id="deleteFile_04_h2">
			delete 
			from
				"HIS_ペイメント情報" 
			where
				exists ( 
					select
						1 
					from
						"IPT_ペイメント情報" 
					where
						    "IPT_ペイメント情報"."日付/時間" = "HIS_ペイメント情報"."日付/時間" 
						and "IPT_ペイメント情報"."決済番号" = "HIS_ペイメント情報"."決済番号" 
						and "IPT_ペイメント情報"."トランザクションの種類" = "HIS_ペイメント情報"."トランザクションの種類" 				
						and COALESCE("IPT_ペイメント情報"."注文番号",'') = COALESCE("HIS_ペイメント情報"."注文番号",'')
						and COALESCE("IPT_ペイメント情報"."SKU",'') = COALESCE("HIS_ペイメント情報"."SKU",'') 						
						and COALESCE("IPT_ペイメント情報"."説明",'') = COALESCE("HIS_ペイメント情報"."説明",'')						
						and "IPT_ペイメント情報"."店舗ID" = "HIS_ペイメント情報"."店舗ID" 
						and "IPT_ペイメント情報"."店舗ID" = :shopId 
						
				)
	</sql>
	<sql id="deleteFile_14_h3">
			delete 
			from
				"HIS_在庫保管手数料情報" 
			where
				exists ( 
					select
						1 
					from
						"IPT_在庫保管手数料情報" 
					where
						    "IPT_在庫保管手数料情報"."ASIN" = "HIS_在庫保管手数料情報"."ASIN" 
						and "IPT_在庫保管手数料情報"."Fulfillment center" = "HIS_在庫保管手数料情報"."Fulfillment center" 						
						and "IPT_在庫保管手数料情報"."Country code" = "HIS_在庫保管手数料情報"."Country code" 
						and "IPT_在庫保管手数料情報"."Month of charge" = "HIS_在庫保管手数料情報"."Month of charge"												
						and "IPT_在庫保管手数料情報"."店舗ID" = "HIS_在庫保管手数料情報"."店舗ID" 
						and "IPT_在庫保管手数料情報"."店舗ID" = :shopId    
					)	
	</sql>
	<sql id="deleteFile_15_h4">
		delete 
		from
			"HIS_長期在庫保管手数料請求額情報" 
		where
			exists ( 
				select
					1 
				from
					"IPT_長期在庫保管手数料請求額情報" 
				where
					"IPT_長期在庫保管手数料請求額情報"."日付" = "HIS_長期在庫保管手数料請求額情報"."日付" 
					and "IPT_長期在庫保管手数料請求額情報"."出品者SKU" = "HIS_長期在庫保管手数料請求額情報"."出品者SKU" 
					and "IPT_長期在庫保管手数料請求額情報"."ASIN" = "HIS_長期在庫保管手数料請求額情報"."ASIN" 
					and "IPT_長期在庫保管手数料請求額情報"."コンディション" = "HIS_長期在庫保管手数料請求額情報"."コンディション" 
					and "IPT_長期在庫保管手数料請求額情報"."国" = "HIS_長期在庫保管手数料請求額情報"."国" 
					and "IPT_長期在庫保管手数料請求額情報"."店舗ID" = "HIS_長期在庫保管手数料請求額情報"."店舗ID" 
					and "IPT_長期在庫保管手数料請求額情報"."店舗ID" = :shopId 
			)
	</sql>


	<sql id="insertFile_02_h1">
		insert into "HIS_注文情報" ( 
			"amazon-order-id"
			, "merchant-order-id"
			, "purchase-date"
			, "last-updated-date"
			, "order-status"
			, "fulfillment-channel"
			, "sales-channel"
			, "order-channel"
			, url
			, "ship-service-level"
			, "product-name" 
			, sku
			, asin
			, "item-status"
			, quantity
			, currency
			, "item-price"
			, "item-tax"
			, "shipping-price"
			, "shipping-tax"
			, "gift-wrap-price"
			, "gift-wrap-tax"
			, "item-promotion-discount"
			, "ship-promotion-discount"
			, "ship-city"
			, "ship-state"
			, "ship-postal-code"
			, "ship-country"
			, "promotion-ids" 
			, "店舗ID" 
			, "登録日時" 
			, "更新日時" 
		) 
		select
			"amazon-order-id"
			, "merchant-order-id"
			, "purchase-date"
			, "last-updated-date"
			, "order-status"
			, "fulfillment-channel"
			, "sales-channel"
			, "order-channel"
			, url
			, "ship-service-level"
			, "product-name" 
			, sku
			, asin
			, "item-status"
			, quantity
			, currency
			, "item-price"
			, "item-tax"
			, "shipping-price"
			, "shipping-tax"
			, "gift-wrap-price"
			, "gift-wrap-tax"
			, "item-promotion-discount"
			, "ship-promotion-discount"
			, "ship-city"
			, "ship-state"
			, "ship-postal-code"
			, "ship-country"
			, "promotion-ids" 
			, :shopId
			, :nowTime 
			, :nowTime
		from
			"IPT_全注文情報"

		

	</sql>
	<sql id="insertFile_04_h2">
		insert into "HIS_ペイメント情報" (
			"日付/時間" 
			, "決済番号" 
			, "トランザクションの種類" 
			, "注文番号" 
			, "SKU" 
			, "説明" 
			, "数量" 
			, "Amazon 出品サービス" 
			, "フルフィルメント" 
			, "市町村" 
			, "都道府県" 
			, "郵便番号" 
			, "税金徴収型" 
			, "商品売上" 
			, "商品の売上税" 
			, "配送料" 
			, "配送料の税金" 
			, "ギフト包装手数料" 
			, "ギフト包装クレジットの税金" 
			, "Amazonポイントの費用" 
			, "プロモーション割引額" 
			, "プロモーション割引の税金" 
			, "源泉徴収税を伴うマーケットプレイス" 
			, "手数料" 
			, "FBA 手数料" 
			, "トランザクションに関するその他の手数料" 
			, "その他" 
			, "合計" 
			, "店舗ID" 
			, "登録日時" 
			, "更新日時" 
		)
		select 
			"日付/時間" 
			, "決済番号" 
			, "トランザクションの種類" 
			, "注文番号" 
			, "SKU" 
			, "説明" 
			, "数量" 
			, "Amazon 出品サービス" 
			, "フルフィルメント" 
			, "市町村" 
			, "都道府県" 
			, "郵便番号" 
			, "税金徴収型" 
			, "商品売上" 
			, "商品の売上税" 
			, "配送料" 
			, "配送料の税金" 
			, "ギフト包装手数料" 
			, "ギフト包装クレジットの税金" 
			, "Amazonポイントの費用" 
			, "プロモーション割引額" 
			, "プロモーション割引の税金" 
			, "源泉徴収税を伴うマーケットプレイス" 
			, "手数料" 
			, "FBA 手数料" 
			, "トランザクションに関するその他の手数料" 
			, "その他" 
			, "合計" 
			, :shopId 
			, :nowTime 
			, :nowTime
		from 
			"IPT_ペイメント情報"

	</sql>
	<sql id="insertFile_14_h3">
		insert into "HIS_在庫保管手数料情報" (
			  "ASIN" 
			, "fnsku" 
			, "商品名" 
			, "Fulfillment center" 
			, "Country code" 
			, "Longest side" 
			, "Median side" 
			, "Shortest side" 
			, "Measurement units" 
			, "weight"
			, "Weight units" 
			, "Item volume" 
			, "Volume units" 
			, "Product size tier" 
			, "Average quantity on hand" 
			, "Average quantity pending removal" 
			, "Total item volume (est.)" 
			, "Month of charge" 
			, "Storage rate" 
			, "通貨" 
			, "Monthly storage fee (est.)" 
			, "category" 
			, "Total Incentive Amount" 
			, "breakdown_incentive_fee_amount" 
			, "average_quantity_customer_orders" 
			, "店舗ID" 
			, "登録日時" 
			, "更新日時" 
		)
		select
			  "ASIN" 
			, "fnsku" 
			, "商品名" 
			, "Fulfillment center" 
			, "Country code" 
			, "Longest side" 
			, "Median side" 
			, "Shortest side" 
			, "Measurement units" 
			, "weight"
			, "Weight units" 
			, "Item volume" 
			, "Volume units" 
			, "Product size tier" 
			, "Average quantity on hand" 
			, "Average quantity pending removal" 
			, "Total item volume (est.)" 
			, "Month of charge" 
			, "Storage rate" 
			, "通貨" 
			, "Monthly storage fee (est.)" 
			, "category" 
			, "Total Incentive Amount" 
			, "breakdown_incentive_fee_amount" 
			, "average_quantity_customer_orders"  
			, :shopId 
			, :nowTime 
			, :nowTime  
		from
			"IPT_在庫保管手数料情報"

	</sql>
	<sql id="insertFile_15_h4">
		
		insert into "HIS_長期在庫保管手数料請求額情報" ( 
			  "日付" 
			, "出品者SKU" 
			, "FNSKU" 
			, "ASIN" 
			, "商品名" 
			, "コンディション" 
			, "qty-charged-long-time-range-long-term-storage-fee" 
			, "商品サイズ" 
			, "通貨" 
			, "long-time-range-long-term-storage-fee" 
			, "qty-charged-short-time-range-long-term-storage-fee" 
			, "short-time-range-long-term-storage-fee" 
			, "volume-unit" 
			, "国" 
			, "enrolled-in-small-and-light" 
			, "店舗ID" 
			, "登録日時" 
			, "更新日時" 
		) 
		select
			  "日付" 
			, "出品者SKU" 
			, "FNSKU" 
			, "ASIN" 
			, "商品名" 
			, "コンディション" 
			, "qty-charged-long-time-range-long-term-storage-fee" 
			, "商品サイズ" 
			, "通貨" 
			, "long-time-range-long-term-storage-fee" 
			, "qty-charged-short-time-range-long-term-storage-fee" 
			, "short-time-range-long-term-storage-fee" 
			, "volume-unit" 
			, "国" 
			, "enrolled-in-small-and-light"  
			, :shopId 
			, :nowTime 
			, :nowTime
		from
			"IPT_長期在庫保管手数料請求額情報"

	</sql>


	<sql id="selectInitInfo1">
		select
			"店舗ID"
			, "データ種別"
			, "導入ファイル名"
			, "導入日時"
			, "導入件数" 
		from
			( 
				select
					"店舗ID"
					, "データ種別"
					, "導入ファイル名"
					, "導入日時"
					, "導入件数"
					, row_number() over (partition by "データ種別" order by "導入日時" desc) rn 
				from
					"TRN_データ導入履歴" 
				where
					"ステータス" = '取込済み'
					and
					"店舗ID" = :shopId
			) temp 
		where
			rn = 1 
		order by
			"データ種別"

	</sql>
	<sql id="selectInitInfo2">
		select
			"店舗ID"
			, "データ種別"
			, "導入ファイル名"
			, "導入日時"
			, "導入件数" 
		from
			( 
				select
					"店舗ID"
					, "データ種別"
					, "導入ファイル名"
					, "導入日時"
					, "導入件数"
					, row_number() over (partition by "データ種別" order by "導入日時" desc) rn 
				from
					"TRN_データ導入履歴" 
				where
					"ステータス" = '識別済み'
					and
					"店舗ID" = :shopId
			) temp 
		where
			rn = 1 
		order by
			"データ種別"

	</sql>

	<sql id="delAllFile01">
		DELETE FROM "IPT_全出品情報"
	</sql>
	<sql id="insertFile01">
		INSERT INTO "IPT_全出品情報"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17,
			:col18,
			:col19,
			:col20,
			:col21,
			:col22,
			:col23,
			:col24,
			:col25,
			:col26,
			:col27,
			:col28,
			:col29,
			:col30,
			:col31,
			:col32,
			:col33,
			:col34,
			:col35,
			:col36,
			:col37,
			:col38,
			:col39,
			:col40,
			:col41,
			:col42,
			:col43,
			:col44,
			:col45,
			:col46  
		)
	</sql>
	<sql id="delAllFile02">
		DELETE FROM "IPT_全注文情報"
	</sql>
	<sql id="insertFile02">
		INSERT INTO "IPT_全注文情報"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17,
			:col18,
			:col19,
			:col20,
			:col21,
			:col22,
			:col23,
			:col24,
			:col25,
			:col26,
			:col27,
			:col28,
			:col29,
			:col30,
			:col31			 
		)
	</sql>
	<sql id="delAllFile03">
		DELETE FROM "IPT_FBA在庫情報"
	</sql>
	<sql id="insertFile03">
		INSERT INTO "IPT_FBA在庫情報"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8
		)
	</sql>
	<sql id="delAllFile04">
		DELETE FROM "IPT_ペイメント情報"
	</sql>
	<sql id="insertFile04">
		INSERT INTO "IPT_ペイメント情報" 
		 
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17,
			:col18,
			:col19,
			:col20,
			:col21,
			:col22,
			:col23,
			:col24,
			:col25,
			:col26,
			:col27,
			:col28,
			:col29,
			:col30			
		)
	</sql>
	<sql id="delAllFile05">
		DELETE FROM "IPT_FBA未出荷情報"
	</sql>
	<sql id="insertFile05">
		INSERT INTO "IPT_FBA未出荷情報"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17,
			:col18,
			:col19,
			:col20,
			:col21,
			:col22,
			:col23,
			:col24,
			:col25,
			:col26,
			:col27,
			:col28,
			:col29,
			:col30,
			:col31,
			:col32,
			:col33,
			:col34,
			:col35,
			:col36,
			:col37,
			:col38,
			:col39,
			:col40,
			:col41,
			:col42,
			:col43,
			:col44,
			:col45,
			:col46, 
			:col47,
			:col48,
			:col49,
			:col50,
			:col51,
			:col52,
			:col53,
			:col54,
			:col55,
			:col56,
			:col57,
			:col58,
			:col59,
			:col60,
			:col61,
			:col62,
			:col63,
			:col64,
			:col65,
			:col66,
			:col67, 
			:col68,
			:col69,
			:col70,
			:col71,
			:col72   
		)
	</sql>
<!-- 06 数据库里没有建表 路过 下面07 -->
	<sql id="delAllFile06">	
	</sql>
	<sql id="insertFile06">	
	</sql>
	<sql id="delAllFile07">
		DELETE FROM "IPT_ビジネスレポート-1"
	</sql>
	<sql id="insertFile07">
		INSERT INTO "IPT_ビジネスレポート-1"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17,
			:col18,
			:col19,
			:col20 
		)
	</sql>
	<sql id="delAllFile08">
		DELETE FROM "IPT_ビジネスレポート-2"
	</sql>
	<sql id="insertFile08">
		INSERT INTO "IPT_ビジネスレポート-2"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16
		)
	</sql>
	<sql id="delAllFile09">
		DELETE FROM "IPT_ビジネスレポート-3"
	</sql>
	<sql id="insertFile09">
		INSERT INTO "IPT_ビジネスレポート-3"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17,
			:col18,
			:col19
			  
		)
	</sql>
	<sql id="delAllFile10">
		DELETE FROM "IPT_ビジネスレポート-4"
	</sql>
	<sql id="insertFile10">
		INSERT INTO "IPT_ビジネスレポート-4"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17,
			:col18,
			:col19,
			:col20,
			:col21,
			:col22,
			:col23,
			:col24   
		)
	</sql>
	<sql id="delAllFile11">
		DELETE FROM "IPT_FBA在庫出荷情報"
	</sql>
	<sql id="insertFile11">
		INSERT INTO "IPT_FBA在庫出荷情報"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17,
			:col18,
			:col19,
			:col20,
			:col21,
			:col22,
			:col23,
			:col24,
			:col25,
			:col26,
			:col27,
			:col28,
			:col29,
			:col30,
			:col31,
			:col32,
			:col33,
			:col34,
			:col35,
			:col36,
			:col37,
			:col38,
			:col39,
			:col40,
			:col41,
			:col42,
			:col43,
			:col44,
			:col45,
			:col46, 
			:col47,
			:col48,
			:col49,
			:col50,
			:col51
			 
		)
	</sql>
	<sql id="delAllFile12">
		DELETE FROM "IPT_出荷情報"
	</sql>
	<sql id="insertFile12">
		INSERT INTO "IPT_出荷情報"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17   
		)
	</sql>
	<sql id="delAllFile13">
		DELETE FROM "IPT_手数料見積り額情報"
	</sql>
	<sql id="insertFile13">
		INSERT INTO "IPT_手数料見積り額情報"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17,
			:col18,
			:col19,
			:col20,
			:col21,
			:col22,
			:col23,
			:col24,
			:col25,
			:col26,
			:col27,
			:col28,
			:col29   
		)
	</sql>
	<sql id="delAllFile14">
		DELETE FROM "IPT_在庫保管手数料情報"
	</sql>
	<sql id="insertFile14">
		INSERT INTO "IPT_在庫保管手数料情報"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17,
			:col18,
			:col19,
			:col20,
			:col21,
			:col22,
			:col23,
			:col24,
			:col25,
			:col26,
			:col27   
		)
	</sql>
	<sql id="delAllFile15">
		DELETE FROM "IPT_長期在庫保管手数料請求額情報"
	</sql>
	<sql id="insertFile15">
		INSERT INTO "IPT_長期在庫保管手数料請求額情報"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17   
		)
	</sql>
	<sql id="delAllFile16">
		DELETE FROM "IPT_返品情報"
	</sql>
	<sql id="insertFile16">
		INSERT INTO "IPT_返品情報"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14  
		)
	</sql>
	<sql id="delAllFile17">
		DELETE FROM "IPT_返送推奨情報"
	</sql>
	<sql id="insertFile17">
		INSERT INTO "IPT_返送推奨情報"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17,
			:col18   
		)
	</sql>
	<sql id="delAllFile18">
		DELETE FROM "IPT_返送所有権放棄依頼詳細情報"
	</sql>
	<sql id="insertFile18">
		INSERT INTO "IPT_返送所有権放棄依頼詳細情報"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5,
			:col6,
			:col7,
			:col8,
			:col9,
			:col10,
			:col11,
			:col12,
			:col13,
			:col14,
			:col15,
			:col16,
			:col17  
		)
	</sql>

	<sql id="insertImportFileInfo">
		INSERT INTO "TRN_データ導入履歴"
		VALUES (
			:col0,
			:col1,
			:col2,
			:col3,
			:col4,
			:col5		 
		)
	</sql>

	<sql id="deleteImportFileInfo">
		DELETE FROM "TRN_データ導入履歴"
		WHERE
			"店舗ID" = :col0
			AND
  			"データ種別" = :col1
			AND
  			"ステータス" = :col2

	</sql>

	<sql id="updateImportFileInfo">
		UPDATE "TRN_データ導入履歴"
		SET 
			"導入日時" = :col0
			,"導入件数" = :col1
			,"ステータス" = :col2
		WHERE
			"店舗ID" = :col3
			AND
  			"データ種別" = :col4
			AND
  			"導入ファイル名" = :col5

	</sql>
</sqls>




