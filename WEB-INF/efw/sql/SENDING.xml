<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqls>
<sqls>

	<sql id="searchproducno">
		SELECT DISTINCT
			"商品管理番号" AS value,
			"商品管理番号" AS text 
		FROM
			"MST_出品マスタ情報" 
		WHERE
			"length" ( 商品管理番号 ) > 0 
			AND "店舗ID" = :shopid  
		ORDER BY
			"商品管理番号"
	</sql>

	<sql id="searchsub1">
		SELECT DISTINCT sub1 FROM
		(
			SELECT
				CASE WHEN "分類１" IS NULL THEN '‐‐‐‐' ELSE "分類１" END AS sub1
			FROM
				"MST_出品マスタ情報" 
			WHERE
				"店舗ID" = :shopid  
				and "商品管理番号" = :product
				and "親子区分" = '子商品'
		) TEMP
		ORDER BY
			sub1
	</sql>

	<sql id="searchsub2">
		SELECT DISTINCT sub2 FROM
		(
			SELECT
				CASE WHEN "分類２" IS NULL THEN '‐‐‐‐' ELSE "分類２" END AS sub2
			FROM
				"MST_出品マスタ情報" 
			WHERE
				"店舗ID" = :shopid  
				and "商品管理番号" = :product
				and "親子区分" = '子商品'
		) TEMP
		ORDER BY
			sub2
	</sql>
<!-- sl:通过分类1查分类2 -->
	<sql id="searchsub2Bysub1">
		SELECT DISTINCT sub2 FROM
		(
		SELECT
			CASE WHEN "分類２" IS NULL THEN '‐‐‐‐' ELSE "分類２" END AS sub2
		FROM
			"MST_出品マスタ情報" 
		WHERE
			"店舗ID" = :shopid  
			and "商品管理番号" = :product
			and "親子区分" = '子商品'
			<if exists="sub1"> AND ( "分類１"  = :sub1 ) </if>
			<if notexists="sub1"> AND (	 "分類１" is null ) </if>
		) TEMP
		ORDER BY
			sub2
	</sql>

<!-- sl:通过分类1，分类2查商品名 -->
<sql id="searchProductByAsinSku">
	SELECT 
		"商品名称" AS productname
	FROM
		"MST_出品マスタ情報" 
	WHERE
	  	"店舗ID" = :shopid  
	  	 and "商品管理番号" = :product
		 and "親子区分" = '子商品'
		<if exists="sub1"> AND (	
		  "分類１"  = :sub1
		)
		</if>
		<if notexists="sub1"> AND (	
		  "分類１" is null
		)
		 </if>
		<if exists="sub2"> AND (	
		  "分類２"  = :sub2
		)
		</if>
		<if notexists="sub2"> AND (	
		  "分類２" is null
		)
		 </if>
</sql>
<!-- sl:检索所有发送订单-->
	<sql id="searchsending" paramPrefix="!">
		SELECT  
			"orderno" as orderno,
			COALESCE ("Amazon注文番号" ,'')||COALESCE ("Qoo10注文番号" ,'')
			||COALESCE ("代行発送管理番号" ,'') ||COALESCE ("自行発送管理番号" ,'') as no,

			to_char("受注日時",'yyyy-MM-dd hh24:mi:ss') as orderdate,

			"ASIN番号" as asin,
			"SKU番号" as sku,
			"商品名称" as productname,
			"数量" as num,
			"購入者電話番号" as phone,

			"お届け先-郵便番号" as mail,
			"お届け先-都道府県" as prefectures,
			"お届け先-市区町村" as city,
			"お届け先-住所1" as address1,
			"お届け先-住所2" as address2,
			"お届け先-住所3" as address3,
			"お届け先-住所全部" as addressall,
			"お届け先-名前" as name,

			"情報整備フラグ" as flg,
			"区分" as type,
			to_char("発送日時",'yyyy-MM-dd hh24:mi:ss') as senddate,
			"発送方法" as send,
			"ステータス" as state,
			"備考" as remark,
			"追跡番号" as traceno,
			"発送内容"  as sendcontent
			
		FROM
			"TRN_発送情報" 
		WHERE
			"店舗ID" = !shopid 
		ORDER BY
			"ステータス",
			case when "発送日時" is null then '2023-04-19 00:00:00' else to_char("発送日時",'yyyy-MM-dd hh24:mi:ss') end desc,
			"受注日時" desc,
			COALESCE ("Amazon注文番号" ,'')||COALESCE ("Qoo10注文番号" ,'')||COALESCE ("代行発送管理番号" ,'') ||COALESCE ("自行発送管理番号" ,'')
		LIMIT 100
	</sql>
 
 <!-- sl：通过订单号查询 -->
 	<sql id="searchbyorderno">
		SELECT  

			COALESCE ("Amazon注文番号" ,'')||COALESCE ("Qoo10注文番号" ,'')
			||COALESCE ("代行発送管理番号" ,'') ||COALESCE ("自行発送管理番号" ,'') as no,

			"受注日時" as orderdate,
			"商品管理番号" as productno,
			"分類１" as sub1,
			"分類２" as sub2,

			"商品名称"  as productname,
			"数量" as num,
			"購入者電話番号" as phone,
			"お届け先-郵便番号" as mail,
			"お届け先-都道府県" as prefectures,
			"お届け先-市区町村" as city,
			"お届け先-住所1" as address1,
			"お届け先-住所2" as address2,
			"お届け先-住所3" as address3,
			"お届け先-住所全部" as addressall,
			"お届け先-名前" as name,
			"区分" as type,
			"発送方法" as send,
			"ステータス" as state,
			"備考" as remark,
			"発送内容" as sendcontent

		FROM
			"TRN_発送情報" 
		WHERE
			"店舗ID" = :shopid  
			and "orderno" = :orderno

	</sql>


<!-- sl:削除 -->
<sql id="delbyorderno"  >
		delete
		from
			"TRN_発送情報"
		where
			"orderno" = :orderno
			and
			"店舗ID"= :shopid	 
</sql>

<!-- sl:新规TRN_発送情報 -->
<sql id="insertsending" >
	insert into "TRN_発送情報"
	 (
	 "Amazon注文番号",
	 "Qoo10注文番号",
	 "代行発送管理番号",
	 "自行発送管理番号",
	 "受注日時",
	 "ASIN番号",
	 "SKU番号",
	 "商品管理番号",
	 "分類１",
	 "分類２",
	 "商品名称",
	 "数量",
	 "購入者電話番号",
	 "お届け先-郵便番号",
	 "お届け先-都道府県",
	 "お届け先-市区町村",
	 "お届け先-住所1",
	 "お届け先-住所2",
	 "お届け先-住所3",
	 "お届け先-住所全部",
	 "お届け先-名前",
	 "情報整備フラグ",

	 "区分" ,
	 "発送方法" ,
	 "ステータス",
	 "備考",
	 "発送内容",
	 "店舗ID",
	 "登録日時",
	 "更新日時"
	 ) VALUES(
		 case   when :type = 'A.AmazonFBM' then :no else null end ,				 --Amazon注文番号
		 case   when :type = 'B.Qoo10発送' then :no else null end ,				 --Qoo10注文番号
		 case   when :type = 'C.代行発送' then :no else null end , 				--代行発送管理番号
		 case   when :type = 'D.自行発送' then :no else null end ,				 --自行発送管理番号
		 now(), 																--受注日時

		 (SELECT  m."ASIN番号" AS asin FROM "MST_出品マスタ情報" m WHERE
						m."商品管理番号" = :product  and m."親子区分" = '子商品'
						<if exists="sub1"> AND (	m."分類１"  = :sub1) </if>
						<if notexists="sub1"> AND ( m."分類１" is null ) </if>
						<if exists="sub2"> AND (	m."分類２"  = :sub2 ) </if>
						<if notexists="sub2"> AND (	m."分類２" is null ) </if>			 
						 and m."店舗ID" = :shopid),	 --ASIN番号

		 (SELECT  m."SKU番号" AS asin FROM "MST_出品マスタ情報" m WHERE
	 					m."商品管理番号" = :product  and m."親子区分" = '子商品'
						<if exists="sub1"> AND (	m."分類１"  = :sub1) </if>
						<if notexists="sub1"> AND ( m."分類１" is null ) </if>
						<if exists="sub2"> AND (	m."分類２"  = :sub2 ) </if>
						<if notexists="sub2"> AND (	m."分類２" is null ) </if>
						 and m."店舗ID" = :shopid),	 --SKU番号 

		:product,	 --商品管理番号
		:sub1,		 --分類１
		:sub2,		 --分類２

		 (SELECT  m."商品名称" AS asin  FROM "MST_出品マスタ情報" m 
			 			WHERE m."商品管理番号" = :product  and m."親子区分" = '子商品' 
						<if exists="sub1"> AND (	m."分類１"  = :sub1) </if>
						<if notexists="sub1"> AND ( m."分類１" is null ) </if>
						<if exists="sub2"> AND (	m."分類２"  = :sub2 ) </if>
						<if notexists="sub2"> AND (	m."分類２" is null ) </if>
			 			and m."店舗ID" = :shopid),	 --商品名称

		 :num,		--数量
		 :phone,	--購入者電話番号
		 :mail,		--お届け先-郵便番号

		 :prefecture,	--お届け先-都道府県
		 :city,			--お届け先-市区町村
 		 :address1,		--お届け先-住所1
		 :address2,		--お届け先-住所2
		 :address3,		--お届け先-住所3
		 :addressall,	--お届け先-住所全部
		 :name,			--お届け先-名前
		 :flg,			--情報整備フラグ

		 :type,			--区分
		 :send,			--発送方法
		 '1.未発送',	--ステータス
		 :remark,		--備考
		 :sendcontent,	--発送内容
		 :shopid,		--店舗ID
		 now(),			--登録日時
		 now()			--更新日時
	 )
</sql>


<!-- sl：更新 -->
<sql id="updatesending"  >
		UPDATE "TRN_発送情報" 
		SET
			"Amazon注文番号"  = case when :type = 'A.AmazonFBM' then :no else null end ,
			"Qoo10注文番号"   = case when :type = 'B.Qoo10発送' then :no else null end ,
			"代行発送管理番号" = case when :type = 'C.代行発送' then :no else null end ,
			"自行発送管理番号" = case when :type = 'D.自行発送' then :no else null end ,

			"ASIN番号" =  (SELECT  m."ASIN番号" AS asin FROM "MST_出品マスタ情報" m WHERE
								m."商品管理番号" = :product
								and m."親子区分" = '子商品' 
								and m."削除フラグ" != '1'
						<if exists="sub1"> AND (	m."分類１"  = :sub1) </if>
						<if notexists="sub1"> AND ( m."分類１" is null ) </if>
						<if exists="sub2"> AND (	m."分類２"  = :sub2 ) </if>
						<if notexists="sub2"> AND (	m."分類２" is null ) </if>
			 			and m."店舗ID" = :shopid),

			"SKU番号" = (SELECT  m."SKU番号" AS sku FROM "MST_出品マスタ情報" m WHERE
						m."商品管理番号" = :product
						and m."親子区分" = '子商品' 
						and m."削除フラグ" != '1'
						<if exists="sub1"> AND (	m."分類１"  = :sub1) </if>
						<if notexists="sub1"> AND ( m."分類１" is null ) </if>
						<if exists="sub2"> AND (	m."分類２"  = :sub2 ) </if>
						<if notexists="sub2"> AND (	m."分類２" is null ) </if>
						  and m."店舗ID" = :shopid),
			"商品管理番号" = :product,
			"分類１" = :sub1,
			"分類２" = :sub2,
			"商品名称" = :productname,
			"数量" = :num,
			"購入者電話番号" = :phone,
			"お届け先-郵便番号" = :mail,
			"お届け先-都道府県" =  :prefecture,
			"お届け先-市区町村" = :city,
			"お届け先-住所1" = :address1,
			"お届け先-住所2" = :address2,
			"お届け先-住所3" = :address3,
			
			"お届け先-住所全部" = case when "区分" = 'A.AmazonFBM' or "区分" = 'B.Qoo10発送' then "お届け先-住所全部" else :addressall end ,

			"お届け先-名前" = :name,
			"情報整備フラグ" = :flg,


			"区分" = :type,
			"発送方法" = :send,
			"備考" = :remark,
			"発送内容"= :sendcontent,
			"更新日時"=now()
 		 WHERE 
		    "店舗ID" =:shopid
			and "orderno" = :orderno
</sql>


<!-- sl：更新追跡番号 -->
<sql id="updatetrackno"  >
		UPDATE "TRN_発送情報" 
		SET
				"追跡番号" = :trackno,
				"ステータス" = '2.発送済',
				"発送日時" = now(),
				"更新日時"=now()
 		 WHERE 
		    "店舗ID" =:shopid
			and "orderno" = :orderno	
			and "発送日時" is null   
</sql>

<!-- sl:商品集计 -->
	<sql id="queryproductlist">
		SELECT  
			"orderno" as orderno,
			"ASIN番号" AS asin ,
			"SKU番号" AS sku ,
			"商品名称" as productname,
			"数量" as count
		FROM
			"TRN_発送情報" 
		WHERE
			"店舗ID" = :shopid  
			and "ステータス" = '1.未発送'
		order by "ASIN番号"
 
	</sql>

	<!-- sl:通过asin，sku查询 -->
	<sql id="queryByAsinSku">
		SELECT  DISTINCT
			A."商品管理番号" as no,
			A."分類１" AS sub1 ,
			A."分類２" AS sub2 ,
			A."ASIN番号" AS asin ,
			A."SKU番号" AS sku ,
			A."LABEL番号" as label 
		FROM
			"MST_出品マスタ情報" A ,"TRN_発送情報" B
		WHERE
			B."店舗ID" = :shopid  
			AND B."ステータス" = '1.未発送'
			AND B."ASIN番号"=A."ASIN番号"
			AND B."SKU番号"=A."SKU番号"
			AND B."ASIN番号"= :asin 
			AND B."SKU番号"= :sku 
	</sql>

	<!-- sl:通过orderno查询番号 -->
	<sql id="queryAsinSku">
		SELECT   
			 "ASIN番号" as asin,
			 "SKU番号" AS sku 
		FROM
			 "TRN_発送情報"  
		WHERE
			 "店舗ID" = :shopid  
			AND  "orderno" = :orderno
	</sql>
		<!-- sl:查询商品状态 -->
	<sql id="quertstatus">
		SELECT   
			 "ステータス" as status
		FROM
			 "TRN_発送情報"  
		WHERE
			 "店舗ID" = :shopid  
			AND  "orderno"= :orderno
	</sql>

	<!-- sl:返回在库数量  未使用 -->
	<!-- <sql id="reverseLocal">
		UPDATE "MST_在庫情報" 
		SET "LOCAL在庫" = "LOCAL在庫" + :num
		FROM
			( SELECT "ASIN番号" AS asin, "SKU番号" AS sku , "店舗ID" as shop FROM "TRN_発送情報" 
				WHERE orderno = :orderno and "店舗ID" = :shopid ) trn 
		WHERE
			"MST_在庫情報"."ASIN番号" = trn.asin 
			AND "MST_在庫情報"."SKU番号" = trn.sku 
			AND "MST_在庫情報"."店舗ID" = trn.shop
	</sql> -->

		<!-- sl:减少在库数量 未使用-->
	<!-- <sql id="minusLocal">
		UPDATE "MST_在庫情報" 
		SET "LOCAL在庫" = "LOCAL在庫" - :num
		FROM
			( SELECT "ASIN番号" AS asin, "SKU番号" AS sku , "店舗ID" as shop FROM "TRN_発送情報" 
				WHERE orderno = :orderno and "店舗ID" = :shopid ) trn 
		WHERE
			"MST_在庫情報"."ASIN番号" = trn.asin 
			AND "MST_在庫情報"."SKU番号" = trn.sku 
			AND "MST_在庫情報"."店舗ID" = trn.shop
	</sql> -->
		<!-- sl:减少在库数量 -->
	<sql id="minusLocal2">
		UPDATE "MST_在庫情報" 
		SET "LOCAL在庫_1" = (case when "LOCAL在庫_1" - trn.num &lt; 0
								then 0 
								else COALESCE("LOCAL在庫_1",0) - trn.num end) 

		FROM
			( SELECT "ASIN番号" AS asin, "SKU番号" AS sku ,"数量" AS num, "店舗ID" as shop FROM "TRN_発送情報" 
				WHERE orderno = :orderno and "店舗ID" = :shopid ) trn 
		WHERE
			"MST_在庫情報"."ASIN番号" = trn.asin 
			AND "MST_在庫情報"."SKU番号" = trn.sku 
			AND "MST_在庫情報"."店舗ID" = trn.shop
	</sql>


	<sql id="selectClickpostInfo">
		SELECT
			A."お届け先-郵便番号" as postno,
			A."お届け先-名前" as name,
			'様' as sama,
			A."お届け先-都道府県" || ' ' || A."お届け先-市区町村" as address1,
			A."お届け先-住所1" as address2,
			COALESCE(A."お届け先-住所2", '') as address3,
			COALESCE(A."お届け先-住所3", '') as address4,
			A."発送内容" as shipcontent
		FROM
			"TRN_発送情報" A
		WHERE
			A."発送方法" = '01.クリックポスト'
			AND
			A."ステータス" = '1.未発送'
			AND
			A."情報整備フラグ" = '1'
			AND 
			A."店舗ID" = :shopid 
		ORDER BY
			A."お届け先-郵便番号"
	</sql>
	<sql id="selectFutubinInfo">
		SELECT
			A."お届け先-郵便番号" as postno,
			A."お届け先-名前" as name,
			'様' as sama,
			A."お届け先-都道府県" || ' ' || A."お届け先-市区町村" as address1,
			A."お届け先-住所1" as address2,
			COALESCE(A."お届け先-住所2", '') as address3,
			COALESCE(A."お届け先-住所3", '') as address4,
			A."発送内容" as shipcontent
		FROM
			"TRN_発送情報" A
		WHERE
			A."発送方法" in ('02.普通便','03.ゆうパケット')
			AND
			A."ステータス" = '1.未発送'
			AND
			A."情報整備フラグ" = '1'
			AND 
			A."店舗ID" = :shopid 
		ORDER BY
			A."ステータス",A."区分",A."受注日時"
	</sql>
<!-- sl: Label情報を挿入する -->
	<sql id="insertLabelInfo">
		insert into ipt_発送情報 (
			ORDERNO,
			届け先_郵便番号,
			届け先_都道府県市区町村,
			届け先_住所１,
			届け先_住所２,
			届け先_住所３,
			届け先_宛先,
			発送内容,
			発送元_郵便番号,
			発送元_都道府県市区町村,
			発送元_住所,
			発送元_宛先,
			区分,
			店舗ID,
			登録日時 
		) values (
			:orderno
			,:postno
			,:address1
			,:address2
			,:address3
			,:address4
			,:name
			,:shipcontent
			,:senderPostno
			,:senderAddress1
			,:senderAddress2
			,:senderName
			,:type
			,:shopid
			,now()
		);
	</sql>
<!-- sl:ipt_発送情報 ⇒ res_発送情報 -->
		<sql id="insertResSendInfo">
			insert into res_発送情報
			select
				ipt.ORDERNO
				, ipt.届け先_郵便番号
				, ipt.届け先_都道府県市区町村
				, ipt.届け先_住所１
				, ipt.届け先_住所２
				, ipt.届け先_住所３
				, ipt.届け先_宛先
				, ipt.発送内容
				, ipt.発送元_郵便番号
				, ipt.発送元_都道府県市区町村
				, ipt.発送元_住所
				, ipt.発送元_宛先
				, ipt.区分
				, ipt.店舗ID
				, now()
				, now() 
			from
				ipt_発送情報 ipt 
			where
				ipt.店舗ID = :shopid
	</sql>

<!-- sl:ipt_発送情報 を　全件削除する -->
	<sql id="delIptSend">
		delete from ipt_発送情報 where 店舗ID = :shopid
	</sql>
<!-- sl:処理対象検索（未発送、普通便とゆうパケット） -->
	<sql id="selectUnsentInfo">
		SELECT
			A."orderno" as orderno,
			A."お届け先-郵便番号" as postno,
			A."お届け先-名前" as name,
			A."お届け先-都道府県" || ' ' || A."お届け先-市区町村" as address1,
			A."お届け先-住所1" as address2,
			COALESCE(A."お届け先-住所2", '') as address3,
			COALESCE(A."お届け先-住所3", '') as address4,
			A."発送内容" as shipcontent,
			A."区分" as type
		FROM
			"TRN_発送情報" A
		WHERE
			A."発送方法" in ('02.普通便','03.ゆうパケット')
			AND
			A."ステータス" = '1.未発送'
			AND
			A."情報整備フラグ" = '1'
			AND 
			A."店舗ID" = :shopid 
		ORDER BY
			A."お届け先-郵便番号"
	</sql>


		<!-- sl:查询是否是C.代行発送 -->
	<sql id="querycase">
		SELECT   
			 "区分" as dcase
		FROM
			 "TRN_発送情報"  
		WHERE
			 "店舗ID" = :shopid  
			AND  "orderno" = :orderno
	</sql>
	<!-- sl:更新代行発送詳細情報追跡番号 -->
<sql id="updateshipatingtrackno"  >
		UPDATE "MST_代行発送情報" 
		SET
				"追跡番号" = :trackno,
				"ステータス" = '3.発送済',
				"更新日時"=now()
		FROM "TRN_発送情報" trn
 		WHERE 
		    "MST_代行発送情報"."管理番号" =trn."代行発送管理番号"
			and trn."orderno" = :orderno	
			
</sql>
	<!-- sl:在庫数量減らす -->
<sql id="updateshipatingmasterLocal"  >
	UPDATE "MST_代行発送商品マスタ情報" 
		SET "数量" =  "数量" - mt.num,
		"更新日時" = now( ) 
		FROM 
			(
			SELECT
				trn."数量" AS num,
				mst."店舗ID" AS shopid,
				mst."商品管理番号" AS kno 
			FROM
				"TRN_発送情報" trn 
				LEFT JOIN "MST_代行発送情報" mst ON  trn."代行発送管理番号" = mst."管理番号" AND trn."店舗ID" = mst."請求先店舗ID" 
			where
				"orderno" = :orderno
			) mt 
		WHERE
			"MST_代行発送商品マスタ情報"."管理番号" = mt.kno 
			AND "MST_代行発送商品マスタ情報"."所有者店舗ID" = mt.shopid
			
</sql>
</sqls>

